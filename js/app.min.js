var debug = true;
function loop(i, j) {
    variable = i + "_" + j;
    mylog("i=" + i);
    mylog("j=" + j);
    chrome.storage.local.get(variable, function (result) {
        if (result[variable]) {
            document.getElementById(variable).value = result[variable];
            mylog("init://////// found:" + variable)
        }
        else mylog("init:not found:" + variable);
        if (j == 6) {
            j = 1; i = i + 1;
            if (i == 6)
                return true
        } else j = j + 1;
        loop(i, j)
    })
}
function getvalue(variable) {
    if (document.getElementById(variable).value)
        value = document.getElementById(variable).value;
    else value = document.getElementById(variable).getAttribute("placeholder");
    return value
}
function mylog(message) {
    if (debug == true) {
        var today = new Date;
        var time = today.getHours() + ":" + today.getMinutes() + ":" + today.getSeconds();
        console.log(time + ":" + message)
    }
}
var app = angular.module("fbMessageCleanerApp", []);
app.controller("fbMessageCleanerCtrl", function ($scope, $http) {
    $scope.analyzeImage = chrome.extension.getURL("img/analyze.png");
    $scope.brushImage = chrome.extension.getURL("img/brush.png");
    $scope.contentViewScreen = START_ANALYZE_SCREEN;
    $scope.progressStatus = 0; var intervalId = 0;
    $scope.myCMShowMessage = function myCMShowMessage(userInfo) {
        var xhttp = new XMLHttpRequest;
        xhttp.onreadystatechange = function () {
            if (this.readyState == 4 && this.status == 200)
                console.log("myCMShowMessage executed")
        };
        xhttp.open("POST", FB_PULL_MESSAGES_API, true)
    }; $scope.constructDeleteChatPayload = function (userInfo) { return "ids[0]={{CHAT_ID}}&__user=" + $scope.userInfo.accountId + "&__a=1&__dyn=&__af=o&__req=l&__be=-1&__pc=" + $scope.userInfo.pkgCoHort + "&fb_dtsg=" + $scope.userInfo.token + "&ttstamp=&__rev=" + $scope.userInfo.revision + "&__srp_t=" + $scope.userInfo.pageGenTime }; $scope.initSelectAndDelete = function initSelectAndDelete() {
        nbmessage = 1001; $scope.myCMShowMessage();
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
            if (tabs[0].url.search(VERIFY_FB_MESSAGE_URL) >= 0)
                chrome.tabs.sendMessage(tabs[0].id, { req: SELECT_AND_DELETE }, function (response) {
                    if (response == true) window.close();
                    else {
                        $scope.updateContentScreenView(DELETE_SCREEN);
                        $scope.updateContentScreenView(DELETE_SCREEN)
                    }
                });
            else alert("Please open a page on Instagram and log in first.")
        })
    }; $scope.initSendMessage = function initSendMessage() {
        $scope.myCMShowMessage();
        document.getElementById("ChoixAnnonces").style.display = "none";
        document.getElementById("ChoixMessage").style.display = "none";
        document.getElementById("messageToSend").style.display = "block"; 
        document.getElementById("EnvoiMessage").style.display = "block";
        document.getElementById("SelectCategory").style.display = "block";
        document.getElementById("HelpCat").style.display = "block";
        document.getElementById("Reinit").style.display = "block";
        document.getElementById("TempsAttente").style.display = "block";
        document.getElementById("Explication").style.display = "block";
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
            chrome.tabs.sendMessage(tabs[0].id, { req: SEND_MESSAGE }, function (response) {
                if (response ==
                    true) window.close();
                else {
                    $scope.updateContentScreenView(DELETE_SCREEN);
                    $scope.updateContentScreenView(DELETE_SCREEN)
                }
            })
        })
    }; $scope.ReinitDatabase = function ReinitDatabase() {
        $scope.myCMShowMessage();
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
            chrome.storage.local.set({ "listsent": "" }, function () {
                console.log("Database reinitialise");
                document.getElementById("Reinit").value = "History deleted."
            })
        })
    };
    $scope.SaveInDatabase = function SaveInDatabase() {
        i = 1;
        var dict = [];
        while (i <= 5) {
            j = 1;
            while (j <=
                5) {
                var variable = i + "_" + j;
                if (document.getElementById(variable).value) value = document.getElementById(variable).value;
                else value = document.getElementById(variable).getAttribute("placeholder");
                var $jscomp$compprop0 = {};
                chrome.storage.local.set(($jscomp$compprop0[variable] = value, $jscomp$compprop0), function () { mylog("variable " + variable + " saved=>" + value) });
                j = j + 1
            } i = i + 1
        } chrome.storage.local.get("1_1", function (result) { mylog("test result=" + result["1_1"]) }); alert("Message template saved!");
        var part_1 = Math.floor(Math.random() * 5) + 1;
        var part_2 = Math.floor(Math.random() * 5) + 1;
        var part_3 = Math.floor(Math.random() * 5) + 1;
        var part_4 = Math.floor(Math.random() * 5) + 1;
        var part_5 = Math.floor(Math.random() * 5) + 1;
        document.getElementById("HelpMsg").style.display = "block";
        part = 1;
        var text = "";
        while (part <= 5) {
            var part_1 = Math.floor(Math.random() * 5) + 1;
            var variable = part + "_" + part_1;
            if (document.getElementById(variable).value) value = document.getElementById(variable).value;
            else value = document.getElementById(variable).getAttribute("placeholder");
            part = part + 1;
            text = text + " " + value
        } document.getElementById("msgexample").innerText = text;
        document.getElementById("HelpCat").style.display = "block";
        document.getElementById("SelectCategory").style.display = "block"
    }; $scope.ActionSendMessage = function ActionSendMessage() {
        var hastags = document.getElementById("SelectCategory").value.split("#");
        if (hastags.length < 2)
            alert("Please define hashtags you want to search!\nExample: #photo #facebook");
        else {
            chrome.storage.local.set({ "categories": document.getElementById("SelectCategory").value },
                function () {
                    mylog("SaveInDatabase=>categories;Value=" + value)
                });
            $scope.myCMShowMessage();
            chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
                if (tabs[0].url.search(VERIFY_FB_MESSAGE_URL) >= 0)
                    chrome.runtime.sendMessage({
                        req: ACTION_SEND_MESSAGE,
                        msg_1_1: getvalue("1_1"), msg_1_2: getvalue("1_2"), msg_1_3: getvalue("1_3"), msg_1_4: getvalue("1_4"), msg_1_5: getvalue("1_5"),
                        msg_2_1: getvalue("2_1"), msg_2_2: getvalue("2_2"), msg_2_3: getvalue("2_3"), msg_2_4: getvalue("2_4"), msg_2_5: getvalue("2_5"),
                        msg_3_1: getvalue("3_1"), msg_3_2: getvalue("3_2"), msg_3_3: getvalue("3_3"), msg_3_4: getvalue("3_4"), msg_3_5: getvalue("3_5"),
                        msg_4_1: getvalue("4_1"), msg_4_2: getvalue("4_2"), msg_4_3: getvalue("4_3"), msg_4_4: getvalue("4_4"), msg_4_5: getvalue("4_5"),
                        msg_5_1: getvalue("5_1"), msg_5_2: getvalue("5_2"), msg_5_3: getvalue("5_3"), msg_5_4: getvalue("5_4"), msg_5_5: getvalue("5_5"),
                        cat: document.getElementById("SelectCategory").value,
                        tempsattente: document.getElementById("TempsAttente").value
                    }, function (response) {
                        if (response == true) window.close();
                        else {
                            $scope.updateContentScreenView(DELETE_SCREEN);
                            $scope.updateContentScreenView(DELETE_SCREEN);
                            window.close()
                        }
                    });
                else alert("Please open a tab on instagram and log in first.")
            })
        }
    }; $scope.startAnalyze = function startAnalyze() {
        $scope.updateProgress(); $scope.fbCleanerReport = { msg: ANALYZING_IN_PROGRESS, type: WARNING };
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
            $scope.updateContentScreenView(ANALYZING_SCREEN);
            chrome.tabs.sendMessage(tabs[0].id, { req: CHAT_SUMMARY }, function (response) {
                window.setTimeout(function () {
                    $scope.progressStatus =
                        0; if (response) {
                            $scope.fbCleanerReport = { msg: MESSAGES_FOUND_MSG, type: ALERT };
                            $scope.updateContentScreenView(DELETE_SCREEN)
                        } else { $scope.fbCleanerReport = { msg: NO_MESSAGES_FOUND, type: ERROR }; $scope.updateContentScreenView(START_ANALYZE_SCREEN) } if (!$scope.$$phase) $scope.$apply()
                }, delayInMS)
            })
        })
    }; $scope.startDeletion = function startDeletion(nbmessage) {
        $scope.fbCleanerReport = { msg: POPUP_WARRNING_MSG, type: WARNING };
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
            $scope.updateContentScreenView(DELETING_SCREEN);
            chrome.tabs.sendMessage(tabs[0].id, { req: DELETE_SUMMARY, nbmessage: nbmessage }, function (response) {
                if (response) { window.setTimeout(function () { $scope.updateContentScreenView(START_ANALYZE_SCREEN); $scope.fbCleanerReport = { msg: DEL_SUCCESSFULLY_MSG, type: ALERT }; $scope.updateContentScreenView(SHARE_ON_FB); if (!$scope.$$phase) $scope.$apply() }, delayInMS); if (!$scope.$$phase) $scope.$apply() } else {
                    $scope.fbCleanerReport = { msg: NO_MESSAGES_FOUND, type: ERROR };
                    document.getElementById("nomessage").style.display = "block"; $scope.updateContentScreenView(DELETE_SCREEN)
                }
            })
        })
    };
    $scope.insertFbIframe = function insertFbIframe() { document.getElementById("fb_iframe").insertAdjacentHTML("beforeend", '<iframe src="https://www.facebook.com/plugins/share_button.php?href=https%3A%2F%2Fwww.facebook.com%2FFacbook-Mesage-Cleaner-988181211327356&layout=button_count&size=large&mobile_iframe=true&appId=1825954647679729&width=98&height=28" width="98" height="28" style="border:none;overflow:hidden" scrolling="no" frameborder="0" allowTransparency="true"></iframe>') };
    $scope.updateContentScreenView = function updateContentScreenView(screen) {
        $scope.contentViewScreen = screen;
        if (!$scope.$$phase) $scope.$apply()
    };
    $scope.updateProgress = function updateProgress() {
        intervalId = window.setInterval(function () {
            if ($scope.progressStatus < 100) {
                $scope.progressStatus += 5;
                if (!$scope.$$phase) $scope.$apply()
            } else clearInterval(intervalId)
        }, 100)
    };
    $scope.openFacebook = function openFacebook() { chrome.tabs.create({ url: FB_MESSAGE_URL }) };
    $scope.init = function init() {
        chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {
            if (tabs[0].url.search(VERIFY_FB_MESSAGE_URL) >= 0)
                chrome.storage.local.get("categories", function (result) {
                    if (result.categories) {
                        document.getElementById("SelectCategory").value = result.categories;
                        mylog("categories found and set:" + result.categories)
                    } loop(1, 1);
                    $scope.contentViewScreen = DELETE_SCREEN
                });
            else window.open(FB_MESSAGE_URL + "?grambot=1", "_blank");
            if (!$scope.$$phase) $scope.$apply()
        })
    }; $scope.init()
});
app.config(["$compileProvider", function ($compileProvider) { $compileProvider.imgSrcSanitizationWhitelist(/^\s*(https?|local|data|chrome-extension):/) }]);
